is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

set -g default-terminal "tmux-256color"
set -as terminal-overrides ",*:Tc"

# Remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# 0 is too far from `
set -g base-index 1

# Tab bar
set-option -g status-position top

set -g status-keys vi
set -g history-limit 10000
setw -g mode-keys vi
setw -g monitor-activity off
set -g detach-on-destroy off

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# Enable copy-pasting
set -g set-clipboard on

# Render undercurls and double underlines
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Tabs (windows) and panes
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-x kill-pane
bind -n M-S-x kill-window
bind -n M-t new-window
bind -n M-n new-session
bind -n M-r command-prompt -p "Rename window:" "rename-window '%%'"
bind -n M-S-r command-prompt -p "Rename session:" "rename-session '%%'"

# Splits bindings
bind -n 'M-S-\' split-window -h
bind -n 'M-S--' split-window -v
unbind '"'
unbind %

# Resize key-bindings
bind -n 'M-C-h' resize-pane -L 1
bind -n 'M-C-j' resize-pane -D 1
bind -n 'M-C-k' resize-pane -U 1
bind -n 'M-C-l' resize-pane -R 1

# Navigation key-bindings
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'M-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'M-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'M-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'M-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Shift arrow to switch windows
bind-key -n 'M-[' previous-window
bind-key -n 'M-]' next-window

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind-key r source-file ~/.tmux.conf \; \
	display-message "Reloaded the config"

# For integration with vim
set -g focus-events on
set -g allow-passthrough all

# Colorscheme
source-file ~/.config/tmux/colorschemes/tokyonight-dimmed.tmux.conf

set status-interval 1

set -g status-bg $color_bg
set -g status-fg $color_fg
set -g status-justify centre

set -g status-left-length 100
set -g status-left-style bg=$color_session,fg=$color_text,none
set -g status-left " #S "

set -g status-right-style bg=$color_alert,fg=$color_text,none
set -g status-right-length 102
set -g status-right "#{pomodoro_status} #[fg=#{color_text},bg=#{color_date},none] %a %d %b #[fg=#{color_text},bg=#{color_time},none] %H:%M "

set -g window-status-separator ""
set -g window-status-format "  #W  "
set -g window-status-current-format "  #W  "

set -g window-status-current-style fg=$color_text,bg=$color_fg,bold
set -g window-status-style fg=$color_fg,bg=$color_window,none
set -g window-status-activity-style fg=$color_text,bg=$color_alert,none

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'jaclu/tmux-menus'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'jaclu/tmux-mouse-swipe'
set -g @plugin 'noscript/tmux-mighty-scroll'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'ofirgall/tmux-window-name'
set -g @plugin 'rickstaa/tmux-notify'
set -g @plugin 'graemedavidson/tmux-pane-focus'
set -g @plugin 'lljbash/tmux-update-display'
set -g @plugin 'olimorris/tmux-pomodoro-plus'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Enable focus-size plugin
set -g @pane-focus-size '75'

# Unbind keys
unbind-key m
unbind-key M
unbind-key M-m
unbind-key n
unbind-key p

# Bindings for notify plugin
bind-key n run-shell -b "$TMUX_PLUGIN_MANAGER_PATH/tmux-notify/scripts/notify.sh"
bind-key N run-shell -b "$TMUX_PLUGIN_MANAGER_PATH/tmux-notify/scripts/cancel.sh"

# Bindings for menu plugin
set -g @menus_trigger 'm'

# Sesh
bind-key -n 'M-s' run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 40%,40% \
    --no-sort --ansi --border-label ' Sessions ' --prompt '⚡  ' \
    --header 'CTRL+a all | CTRL+t tmux | CTRL+x dirs | CTRL+d kill' \
	--border sharp \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(⚡  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(🪟  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(⚙️  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(📁  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(🔎  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(⚡  )+reload(sesh list --icons)' \
)\""

# Window name options
set -g @tmux_window_name_use_tilde "True"
set -g @tmux_window_name_show_program_args "False"
set -g @tmux_window_dir_programs "['nvim', 'vim', 'vi', 'git', 'python', 'python3']"
set -g @tmux_window_name_substitute_sets "[('.+ipython([32])', 'ipython\g<1>'), ('^(/usr)?/bin/(.+)', '\g<2>'), ('.+poetry shell', 'poetry'), ('apt', ''), ('bash', ''), ('caffeinate', ''), ('cargo', ''), ('beam.mp', ''), ('beam', ''), ('brew', ''), ('btop', ''), ('cfdisk', ''), ('dnf', ''), ('docker', ''), ('dpkg', ''), ('emacs', ''), ('fdisk', ''), ('fish', ''), ('git', ''), ('gitui', ''), ('gh', ''), ('ghostty', ''), ('go', ''), ('helm', '󱃾'), ('hx', '󰔤'), ('htop', ''), ('java', ''), ('just', ''), ('k9s', '󱃾'), ('kubectl', '󱃾'), ('lazydocker', ''), ('lazygit', ''), ('lf', ''), ('lfcd', ''), ('lvim', ''), ('mactop', ''), ('nala', ''), ('node', ''), ('nu', ''), ('nvim', ''), ('pacman', ''), ('parted', ''), ('paru', ''), ('Python', ''), ('.*python.*', ''), ('ranger', ''), ('ruby', ''), ('rustc', ''), ('rustup', ''), ('ssh', '󰣀'), ('tcsh', ''), ('tig', ''), ('tmux', ''), ('top', ''), ('topgrade', '󰚰'), ('vim', ''), ('yay', ''), ('yazi', ''), ('yum', ''), ('zsh', ''), ('gcc', ''), ('clang', ''), ('make', ''), ('cmake', ''), ('gdb', ''), ('lldb', ''), ('valgrind', ''), ('pip', ''), ('pip3', ''), ('npm', ''), ('yarn', ''), ('maven', ''), ('gradle', ''), ('ant', ''), ('dotnet', ''), ('csharp', ''), ('visualstudio', ''), ('code', ''), ('code-insiders', ''), ('atom', ''), ('sublime_text', ''), ('eclipse', ''), ('netbeans', ''), ('idea', ''), ('pycharm', ''), ('clion', ''), ('virtualbox', ''), ('vagrant', ''), ('hg', ''), ('svn', ''), ('mysql', ''), ('psql', ''), ('sqlite', ''), ('redis', ''), ('mongo', ''), ('powershell', ''), ('perl', ''), ('swift', ''), ('ghc', ''), ('stack', ''), ('scala', ''), ('elixir', ''), ('R', 'ﳒ'), ('julia', ''), ('dart', ''), ('flutter', ''), ('deno', ''), ('tsc', ''), ('minikube', '󱃾'), ('aws', ''), ('terraform', 'ﲽ'), ('ansible', ''), ('gnome-terminal', ''), ('alacritty', ''), ('iterm2', ''), ('nano', ''), ('curl', ''), ('wget', ''), ('zip', ''), ('unzip', ''), ('openssl', ''), ('gpg', ''), ('crontab', ''), ('systemctl', ''), ('nginx', ''), ('apache2', ''), ('httpd', ''), ('rsync', ''), ('screen', ''), ('jekyll', ''), ('php', ''), ('composer', ''), ('laravel', ''), ('wordpress', ''), ('jenkins', ''), ('travis', ''), ('gitlab', ''), ('bitbucket', ''), ('react', ''), ('ng', ''), ('vue', '﵂'), ('gulp', ''), ('grunt', ''), ('webpack', ''), ('babel', ''), ('jest', ''), ('mocha', ''), ('puppet', ''), ('doctl', ''), ('heroku', ''), ('firebase', ''), ('gcloud', ''), ('sudo', ''), ('scp', '󰣀'), ('weechat', '󰭹')]"

# Sessions
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'on'
set -g @continuum-boot 'on'
set -g @continuum-boot-options 'kitty'
set -g @continuum-systemd-start-cmd 'start-server'
set -g @continuum-save-interval '5'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
